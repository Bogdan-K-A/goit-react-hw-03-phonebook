{"version":3,"sources":["components/ContactFilter/ContactFilter.module.css","components/container/Container.module.css","components/ContactForm/ContactForm.module.css","components/container/Container.js","components/ContactElem/ContactElem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.js","App.js","index.js","components/ContactElem/ContactElem.module.css"],"names":["module","exports","Container","children","className","s","container","ContactElem","name","number","onContactDelete","btnItem","type","onClick","ContactList","contacts","map","id","contactItem","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","form","roundedInput","pattern","title","placeholder","required","onChange","btnForm","Component","ContactFilter","filterInputBox","filterInput","App","filter","addContact","reLockInput","find","contact","alert","shortid","generate","contactDelete","contactId","contactsFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cb7da25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"ContactFilter_filterInput__2VjM9\",\"filterInputBox\":\"ContactFilter_filterInputBox__ZnMNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__WNd2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__BNY5O\",\"roundedInput\":\"ContactForm_roundedInput__2nxpD\",\"btnForm\":\"ContactForm_btnForm__1575i\"};","import s from './Container.module.css'\r\n\r\nexport const Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n)\r\n","import PropTypes from 'prop-types'\r\nimport s from './ContactElem.module.css'\r\n\r\nexport const ContactElem = ({ name, number, onContactDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={s.btnItem} type=\"button\" onClick={onContactDelete}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nContactElem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onContactDelete: PropTypes.func.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { ContactElem } from '../ContactElem/ContactElem'\r\nimport s from '../ContactElem/ContactElem.module.css'\r\n\r\nexport const ContactList = ({ contacts, onContactDelete }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.contactItem} key={id}>\r\n            <ContactElem\r\n              name={name}\r\n              number={number}\r\n              onContactDelete={() => {\r\n                onContactDelete(id)\r\n              }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  onContactDelete: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './ContactForm.module.css'\r\n\r\nexport class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  }\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  /* ------------------------- Записывает имя контакта ------------------------ */\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({ [name]: value })\r\n  }\r\n  /* -------------- выводит введённые данные по нажатию на кнопку ------------- */\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { number, name } = this.state\r\n\r\n    this.props.onAddContact(name, number)\r\n    this.setState({ name: '', number: '' })\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label>\r\n          {/* <p>Name</p> */}\r\n          <input\r\n            className={s.roundedInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            placeholder=\"Name:\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          {/* <p>Number</p> */}\r\n          <input\r\n            className={s.roundedInput}\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            placeholder=\"Tel:\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.btnForm}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport s from './ContactFilter.module.css'\r\n\r\nexport const ContactFilter = ({ value, onChange }) => (\r\n  <label className={s.filterInputBox}>\r\n    <input\r\n      className={s.filterInput}\r\n      placeholder=\"Find contacts by name\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n)\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","import { Component } from 'react'\r\nimport shortid from 'shortid'\r\nimport { Container } from './components/container/Container'\r\nimport { ContactList } from './components/ContactList/ContactList'\r\nimport { ContactForm } from './components/ContactForm/ContactForm'\r\nimport { ContactFilter } from './components/ContactFilter/ContactFilter'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  }\r\n\r\n  /* ---------------------- Добавление контакта в список ---------------------- */\r\n  addContact = (name, number) => {\r\n    const { contacts } = this.state\r\n    const reLockInput = contacts.find((contact) => contact.name === name)\r\n\r\n    /* ------------------------ условие запрета на повторный ввод ----------------------- */\r\n    if (reLockInput) {\r\n      alert('Такой контакт уже есть в списке')\r\n    } else {\r\n      /* ------------------------ Добавляет контакт в список ----------------------- */\r\n      const contact = {\r\n        name,\r\n        number,\r\n        id: shortid.generate(),\r\n      }\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n      }))\r\n    }\r\n  }\r\n\r\n  /* ----------------------- Удаление контакта из списка ---------------------- */\r\n  contactDelete = (contactId) => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter((contact) => contact.id !== contactId),\r\n    }))\r\n  }\r\n\r\n  /* ---------------------------- Фильтр контактов ---------------------------- */\r\n  contactsFilter = (e) => {\r\n    const { value } = e.target\r\n    this.setState({ filter: value })\r\n  }\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state\r\n    const normalizedFilter = filter.toLowerCase()\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { filter } = this.state\r\n    const visibleContacts = this.getVisibleContacts()\r\n\r\n    return (\r\n      <Container>\r\n        <h1>Phoneboock</h1>\r\n        <ContactForm onAddContact={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <ContactFilter value={filter} onChange={this.contactsFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onContactDelete={this.contactDelete}\r\n        />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactElem_contactItem__89gFW\",\"btnItem\":\"ContactElem_btnItem__2j6dL\"};"],"sourceRoot":""}